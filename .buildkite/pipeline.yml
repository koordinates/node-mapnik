_build_step_amd64: &_build_step_amd64
  command: "make && make publish-binary"
  plugins:
    docker-compose#v4.9.0:
      args:
        - NODE_VERSION
      run: mapnikbuilder
      config: docker-compose.yml
      env:
        - NPM_TOKEN
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_SESSION_TOKEN
        - "PATCH_VERSION_NUMBER=${BUILDKITE_BUILD_NUMBER}"
    cultureamp/aws-assume-role#v0.2.0:
      role: "arn:aws:iam::139273981395:role/s3-kx-publish-node-binaries"
  agents:
    queue: "default"

_build_step_arm64: &_build_step_arm64
  <<: *_build_step_amd64
  agents:
    queue: "default_arm64"

steps:
  - group: "build binaries for amd64"
    key: "amd64"
    steps:
      - <<: *_build_step_amd64
        name: ":building_construction: Build amd64 binary (:nodejs: node=12)"
        env:
          NODE_VERSION: "12"
      - <<: *_build_step_amd64
        name: ":building_construction: Build amd64 binary (:nodejs: node=14)"
        env:
          NODE_VERSION: "14"
      # NOTE: I tried to add Node v16 but it fails to find node-pre-gyp for some reason and I haven't looked into why

  - group: "build binaries for arm64"
    key: "arm64"
    steps:
      - <<: *_build_step_arm64
        name: ":building_construction: Build arm64 binary (:nodejs: node=12)"
        env:
          NODE_VERSION: "12"
      - <<: *_build_step_arm64
        name: ":building_construction: Build arm64 binary (:nodejs: node=14)"
        env:
          NODE_VERSION: "14"

  - wait

  - name: "Publish npm package"
    command: "make publish-npm"
    plugins:
      docker-compose#v3.7.0:
        build: mapnikbuilder
        args:
          - "NODE_VERSION=12"
        run: mapnikbuilder
        config: docker-compose.yml
        env:
          - NPM_TOKEN
          - "PATCH_VERSION_NUMBER=${BUILDKITE_BUILD_NUMBER}"
